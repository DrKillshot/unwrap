"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[603],{6899:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Learn","collapsed":false,"items":[{"type":"link","label":"Getting started","href":"/unwrap/docs/library/getting-started","docId":"library/getting-started","unlisted":false}],"collapsible":true,"href":"/unwrap/docs/category/learn"},{"type":"category","label":"Monads","collapsed":false,"items":[{"type":"link","label":"Maybe","href":"/unwrap/docs/monads/maybe","docId":"monads/maybe","unlisted":false},{"type":"link","label":"Either","href":"/unwrap/docs/monads/either","docId":"monads/either","unlisted":false},{"type":"link","label":"IO","href":"/unwrap/docs/monads/io","docId":"monads/io","unlisted":false}],"collapsible":true,"href":"/unwrap/docs/category/monads"}]},"docs":{"library/getting-started":{"id":"library/getting-started","title":"Getting started","description":"Why Unwrap?","sidebar":"docs"},"monads/either":{"id":"monads/either","title":"Either<Ok, Error>","description":"The Either monad can hold two types of values: an Ok(value) value and an Error(error) value. The Either monad is typically use to replace exceptions in the codebase and make each method more explicit and declarative in its Either.","sidebar":"docs"},"monads/io":{"id":"monads/io","title":"IO<Operation>","description":"The IO monad is for isolating side effects in your program. This monad is lazy and will not be evaluated until the unwrap method is called.","sidebar":"docs"},"monads/maybe":{"id":"monads/maybe","title":"Maybe<Value>","description":"The Maybe monad may or may not hold some value. It is commonly used to represent optional values.","sidebar":"docs"}}}}')}}]);